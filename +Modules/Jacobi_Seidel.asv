function x = Jacobi_Seidel (A, B, X)
[m, n] = size(A);

it = input('¿Cuantas iteraciones del metodo desea realizar? \n');


X = zeros(n, 1);
Dominante = zeros(n, 1);
B = zeros(n, 1);
while (Dominante ~= ones(n, 1))
  for i=1:n
    Dominante(i, 1) = (2*abs(A(i, i)) > sum(abs(A(i, :))))
  end
  
  if (Dominante ~= ones(n, 1))
    disp('\nLa matriz no es dominante, intente organizar los valores para crear la matriz dominante. ')
  end
end

disp('\n')
disp('¿Por cual metodo le gustaria resolver la matriz? \n')
disp('1. Metodo de Jacobi.')
disp('2. Metodo de Gauss-Seidel.')
disp('0. Salir')
o = input('Elija una opcion:');
while (n > 3 && n < 0)
  if (n > 3 && n < 0)
    disp('\nEl numero ingresado no es valido. ')
    o = input('Elija una opcion:');
  end
end

if (o == 1)
  
  temp = zeros(n, 1);
  
  for y=1:it
    %disp(['<-- Paso ', num2str(y), ' -->'])
    
    for i=1:n
      Suma = 0;
      for j=1:n
        if (i ~= j)
          Suma = Suma +(A(i, j) * X(j, 1));
        end
      end
      temp(i, 1) = (B(i, 1) - Suma) / A(i, i);
    end
    
    X = temp;
  end
  
  disp('')
  disp('Respuesta:')
  disp(X)
  disp('')

elseif (o == 2)

  for y=1:it
    %disp(['<-- Paso ', num2str(y), ' -->'])
    
    for i=1:n
      Suma = 0;
      for j=1:n
        if (i ~= j)
          Suma = Suma + (A(i, j) * X(j, 1));
        end
      end
      X(i, 1) = (B(i, 1) - Suma) / A(i, i);
    end
  end
  
  disp('')
  disp(' Respuesta:')
  disp(X)
  disp('')
  
end
